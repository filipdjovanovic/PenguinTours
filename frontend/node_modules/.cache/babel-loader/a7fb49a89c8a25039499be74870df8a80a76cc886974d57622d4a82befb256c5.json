{"ast":null,"code":"var _jsxFileName = \"/home/choki/Desktop/Projekat/PenguinTours/frontend/src/routes.js/protected.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminProtectedRoute = _ref => {\n  _s();\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  if (!(localStorage.getItem(\"token\") ? true : false)) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminProtectedRoute, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = AdminProtectedRoute;\nexport default AdminProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminProtectedRoute\");","map":{"version":3,"names":["React","useState","Redirect","AdminProtectedRoute","component","Component","rest","isAuthenticated","setIsAuthenticated","localStorage","getItem","pathname","props"],"sources":["/home/choki/Desktop/Projekat/PenguinTours/frontend/src/routes.js/protected.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst AdminProtectedRoute = ({ component: Component, ...rest }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  if (!(localStorage.getItem(\"token\") ? true : false)) {\n    return <Redirect to={{ pathname: '/login' }} />\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => (\n        <Component {...props} />\n      )}\n    />\n  );\n}\nexport default AdminProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC;AAE5C,MAAMC,mBAAmB,GAAG,QAAuC;EAAA;EAAA,IAAtC;IAAEC,SAAS,EAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC;EAC5D,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE7D,IAAI,EAAEQ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,EAAE;IACnD,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAS;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EACjD;EAEA,oBACE,QAAC,KAAK;IAAA,GACAL,IAAI;IACR,MAAM,EAAGM,KAAK,iBACZ,QAAC,SAAS;MAAA,GAAKA;IAAK;MAAA;MAAA;MAAA;IAAA;EACpB;IAAA;IAAA;IAAA;EAAA,QACF;AAEN,CAAC;AAAA,GAfKT,mBAAmB;AAAA,KAAnBA,mBAAmB;AAgBzB,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}