{"ast":null,"code":"var _jsxFileName = \"/home/choki/Desktop/WEBStdy/PenguinTours/frontend/src/components/proba.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ReactPaginate from \"https://cdn.skypack.dev/react-paginate@7.1.3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst items = [...Array(33).keys()];\nfunction Items(_ref) {\n  let {\n    currentItems\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"items\",\n    children: currentItems && currentItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Item #\", item]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = Items;\nexport default function PaginatedItems(_ref2) {\n  _s();\n  let {\n    itemsPerPage\n  } = _ref2;\n  // We start with an empty list of items.\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    setCurrentItems(items.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(items.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage]);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % items.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Items, {\n      currentItems: currentItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      nextLabel: \"next >\",\n      onPageChange: handlePageClick,\n      pageRangeDisplayed: 3,\n      marginPagesDisplayed: 2,\n      pageCount: pageCount,\n      previousLabel: \"< previous\",\n      pageClassName: \"page-item\",\n      pageLinkClassName: \"page-link\",\n      previousClassName: \"page-item\",\n      previousLinkClassName: \"page-link\",\n      nextClassName: \"page-item\",\n      nextLinkClassName: \"page-link\",\n      breakLabel: \"...\",\n      breakClassName: \"page-item\",\n      breakLinkClassName: \"page-link\",\n      containerClassName: \"pagination\",\n      activeClassName: \"active\",\n      renderOnZeroPageCount: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PaginatedItems, \"HTeX8cSP+G2jiDQZoJcFFLxPhRM=\");\n_c2 = PaginatedItems;\nvar _c, _c2;\n$RefreshReg$(_c, \"Items\");\n$RefreshReg$(_c2, \"PaginatedItems\");","map":{"version":3,"names":["React","useEffect","useState","ReactPaginate","items","Array","keys","Items","currentItems","map","item","PaginatedItems","itemsPerPage","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","console","log","slice","Math","ceil","length","handlePageClick","event","newOffset","selected"],"sources":["/home/choki/Desktop/WEBStdy/PenguinTours/frontend/src/components/proba.js"],"sourcesContent":["import React ,{ useEffect,useState} from \"react\";\n\nimport ReactPaginate from \"https://cdn.skypack.dev/react-paginate@7.1.3\";\n\nconst items = [...Array(33).keys()];\n\nfunction Items({ currentItems }) {\n  return (\n    <div className=\"items\">\n    {currentItems && currentItems.map((item) => (\n      <div>\n        <h3>Item #{item}</h3>\n      </div>\n    ))}\n      </div>\n  );\n}\n\nexport default function PaginatedItems({ itemsPerPage }) {\n  // We start with an empty list of items.\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    setCurrentItems(items.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(items.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage]);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    const newOffset = event.selected * itemsPerPage % items.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  return (\n    <>\n      <Items currentItems={currentItems} />\n      <ReactPaginate\n        nextLabel=\"next >\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={2}\n        pageCount={pageCount}\n        previousLabel=\"< previous\"\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel=\"...\"\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAEhD,OAAOC,aAAa,MAAM,8CAA8C;AAAC;AAAA;AAEzE,MAAMC,KAAK,GAAG,CAAC,GAAGC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,EAAE,CAAC;AAEnC,SAASC,KAAK,OAAmB;EAAA,IAAlB;IAAEC;EAAa,CAAC;EAC7B,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,UACrBA,YAAY,IAAIA,YAAY,CAACC,GAAG,CAAEC,IAAI,iBACrC;MAAA,uBACE;QAAA,WAAI,QAAM,EAACA,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QAExB;EAAC;IAAA;IAAA;IAAA;EAAA,QACM;AAEZ;AAAC,KAVQH,KAAK;AAYd,eAAe,SAASI,cAAc,QAAmB;EAAA;EAAA,IAAlB;IAAEC;EAAa,CAAC;EACrD;EACA,MAAM,CAACJ,YAAY,EAAEK,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC7C;EACA;EACA,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,SAAS,GAAGF,UAAU,GAAGJ,YAAY;IAC3CO,OAAO,CAACC,GAAG,CAAE,sBAAqBJ,UAAW,OAAME,SAAU,EAAC,CAAC;IAC/DL,eAAe,CAACT,KAAK,CAACiB,KAAK,CAACL,UAAU,EAAEE,SAAS,CAAC,CAAC;IACnDH,YAAY,CAACO,IAAI,CAACC,IAAI,CAACnB,KAAK,CAACoB,MAAM,GAAGZ,YAAY,CAAC,CAAC;EACtD,CAAC,EAAE,CAACI,UAAU,EAAEJ,YAAY,CAAC,CAAC;;EAE9B;EACA,MAAMa,eAAe,GAAIC,KAAK,IAAK;IACjC,MAAMC,SAAS,GAAGD,KAAK,CAACE,QAAQ,GAAGhB,YAAY,GAAGR,KAAK,CAACoB,MAAM;IAC9DL,OAAO,CAACC,GAAG,CAAE,8BAA6BM,KAAK,CAACE,QAAS,qBAAoBD,SAAU,EAAC,CAAC;IACzFV,aAAa,CAACU,SAAS,CAAC;EAC1B,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,KAAK;MAAC,YAAY,EAAEnB;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eACrC,QAAC,aAAa;MACZ,SAAS,EAAC,QAAQ;MAClB,YAAY,EAAEiB,eAAgB;MAC9B,kBAAkB,EAAE,CAAE;MACtB,oBAAoB,EAAE,CAAE;MACxB,SAAS,EAAEX,SAAU;MACrB,aAAa,EAAC,YAAY;MAC1B,aAAa,EAAC,WAAW;MACzB,iBAAiB,EAAC,WAAW;MAC7B,iBAAiB,EAAC,WAAW;MAC7B,qBAAqB,EAAC,WAAW;MACjC,aAAa,EAAC,WAAW;MACzB,iBAAiB,EAAC,WAAW;MAC7B,UAAU,EAAC,KAAK;MAChB,cAAc,EAAC,WAAW;MAC1B,kBAAkB,EAAC,WAAW;MAC9B,kBAAkB,EAAC,YAAY;MAC/B,eAAe,EAAC,QAAQ;MACxB,qBAAqB,EAAE;IAAK;MAAA;MAAA;MAAA;IAAA,QAC5B;EAAA,gBACD;AAEP;AAAC,GAhDuBH,cAAc;AAAA,MAAdA,cAAc;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}